import struct
import binascii
import sys


def format_1(p_input):

	parts = p_input.split(', ')
	parts_without_0x = list()
	for part in parts:
		a = part.replace('0x', '')
		b = a.zfill(2)
		parts_without_0x.append(b)

	output = ''
	for p in parts_without_0x:
		output += p
	# print(output)
	return output


def ieee754_to_rendered_str(val):
	value = struct.unpack('>f', binascii.unhexlify(val))
	rounded_val = round(value[0], 2)
	return rounded_val


def slot_splitter(val):
	slots = val.split('8213')
	if len(slots) > 1:
		slots = slots[1:]
	for i, slot in enumerate(slots):
		if i != 3:
			continue
		# print(str(i) + ': ' + slot)
		values = slot.split('ca')
		for value in values:
			if len(value) == 8:
				ieee_val = ieee754_to_rendered_str(value)
				print(ieee_val)
			else:
				print(value)
			return


def ca_splitter(val):
	parts = val.split('ca')
	for part in parts:
		if len(part) == 8:
			ieee_val = ieee754_to_rendered_str(part)
			print(ieee_val)
		else:
			print(part)


def main(args):
	if len(args) > 1:
		print(format_1(args[1]))
		return

	print(ieee754_to_rendered_str('03000490'))
	print(ieee754_to_rendered_str('c30c8302'))
	# us double vib
	slot_splitter("00009f00aa0900008366cd03eb670068da099fa96c362d68656c697800da00303d000000610000004e02000050020000ca020000d6020000c6030000f00300003e000000f60300009f0900009f09000089078324a45033330023ce0301000025b376322e39322d3536352d6730323137383763000082150016dc0014821300148205010783020303030493c2cac2400000ca3f0000008213061485188317c219771aff09010ac30b83020703070497cac214666603ca3d1ba5e0ca3e4cccd0ca3f800000ca40e00000ca40c000000c8302000300049082130814c08213061485188317c3192a1a3609120ac30b83020c030c049cca3eccccccca3ec28f5cca3f333334ca3f147ae0ca3e800000ca3f4cccccca3f800000ca3f000000ca3f000000ca3ea8f5c4ca3f19999aca3f0000000c83020603050496ca40400000ca42a00000ca45fa0000ca00000000ca000000000582130814c082130814c08213061485188317c219cd01ee1aff09080ac30b83020903080499ca3e570a40ca00000000ca3e800000ca3eccccccca3e6147b0ca00000000ca42dc0000ca45bb8000c20c8302000300049082130814c082130814c0821301148206010783020203020492ca3f000000ca0000000082130214830e82050007830200030004900f8408cd01010d000ac30783020303030493ca3f000000ca3f000000c212c282130814c082130814c082130814c082130814c082130814c082130814c082130814c082130814c08213031483108206000783020003000490118408cc970d000ac30783020603060496ca00000000ca3f000000ca00000000ca3f000000c2ca0000000012c201c0038207020895918")

	# mail order twin in slot 2
	ca_splitter("0000ab28b60900008366cd03eb670068da09aba96c362d68656c697800da00303d000000610000004e02000050020000ca020000d6020000c6030000f00300003e000000f6030000ab090000ab09000089078324a45033330023ce0301000025b376322e39322d3536352d6730323137383763000082150016dc0014821300148205010783020303030493c2cac2400000ca3f0000008213061485188317c219771aff09010ac30b83020703070497cac214666603ca3d1ba5e0ca3e4cccd0ca3f800000ca40e00000ca40c000000c830200030004908213061485188317c3191d1a3909120ac30b83020c030c049cca3f400000ca3eb33333ca3ee147aeca3f47ae14ca00000000ca3f4ccccdca3f800000ca3f000000ca3f000000ca3f000000ca3f19999aca3f0000000c83020603050496ca40200000ca42a00000ca45fa0000ca00000000ca000000000582130814c082130814c082130814c08213061485188317c219cd01ee1aff09080ac30b83020903080499ca3e570a40ca00000000ca3e800000ca3eccccccca3e6147b0ca00000000ca42dc0000ca45bb8000c20c8302000300049082130814c082130814c0821301148206010783020203020492ca3f000000ca0000000082130214830e82050007830200030004900f8408cd01010d000ac30783020303030493ca3f000000ca3f000000c212c282130814c082130814c082130814c082130814c082130814c082130814c082130814c082130814c08213031483108206000783020003000490118408cc970d000ac30783020603060496ca00000000ca3f000000ca00000000ca3f000000c2ca0000000012c201c003820702089591870a070b84000305a943432056616c75650006ce0007100c07c20cc30ea1000dc210000fc291870a070b84000305a9536e617073686f740006ce0007100c07c20cc30ea1000dc210000fc291870a070b84000305a943432056616c75650006ce0007100c07c20cc30ea1000dc210000fc2c0c0049ac0c0c0c0c0c0c0c0c0c00282009dd10000d10000d10000d10000d10000d10000d10001d1000fd10001d10000d10000d10000d10000019d97cc00cc00cc00cc00cc00cc00cc0097cc00cc00cc00cc00cc00cc00cc0097cc00cc00cc00cc00cc00cc00cc0097cc00cc00cc00cc00cc00cc00cc0097cc00cc00cc00cc00cc00cc00cc0097cc00cc00cc00cc00cc00cc00cc0097cc00cc01cc53cc01cc00cc00cc0097cc00cc00cc01cc00cc00cc00cc0097cc00cc01cc53cc01cc00cc00cc0097cc00cc00cc00cc00cc00cc00cc0097cc00cc00cc00cc00cc00cc00cc0097cc00cc00cc00cc00cc00cc00cc0097cc00cc00cc00cc00cc00cc00cc00058e10ca42f000002d002ecabdccccd02fcabdccccd0300031c332003300340035003600370038c21e00068262021a000a8606000703080009140a938700c3019b9308c297000153010000009306c297000153010000009307c297000001000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c2970000000000000002dc004093c20dca0000000093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c003dc001492c2c292c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c304ab534e415053484f5420310005ca42f000000c008700c2019b9308c297000000000000009306c297000000000000009307c297000001000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c2970000000000000002dc004093c20dca0000000093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c003dc001492c2c292c2c392c2c392c2c392c2c392c2c392c2c392c2c292c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c292c2c392c2c304ab534e415053484f5420320005ca42f000000c008700c2019b9308c297000000000000009306c297000000000000009307c297000001000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c297000000000000009318c2970000000000000002dc004093c20dca0000000093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c093c240c003dc001492c2c292c2c392c2c392c2c392c2c392c2c392c2c392c2c292c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c392c2c292c2c392c2c304ab534e415053484f5420330005ca42f000000c000ddc0014c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c3c240")

	# mail order twin in slot 3
	ca_splitter("00009f28aa0900008366cd03eb670068da099fa96c362d68656c697800da00303d000000610000004e02000050020000ca020000d6020000c6030000f00300003e000000f60300009f0900009f09000089078324a45033330023ce0301000025b376322e39322d3536352d6730323137383763000082150016dc0014821300148205010783020303030493c2cac2400000ca3f0000008213061485188317c219771aff09010ac30b83020703070497cac214666603ca3d1ba5e0ca3e4cccd0ca3f800000ca40e00000ca40c000000c8302000300049082130814c08213061485188317c3191d1a3909120ac30b83020c030c049cca3f400000ca3eb33333ca3ee147aeca3f47ae14ca00000000ca3f4ccccdca3f800000ca3f000000ca3f000000ca3f000000ca3f19999aca3f0000000c83020603050496ca40200000ca42a00000ca45fa0000ca00000000ca000000000582130814c082130814c08213061485188317c219cd01ee1aff09080ac30b83020903080499ca3e570a40ca00000000ca3e800000ca3eccccccca3e6147b0ca00000000ca42dc0000ca45bb8000c20c8302000300049082130814c082130814c0821301148206010783020203020492ca3f000000ca0000000082130214830e82050007830200030004900f8408cd01010d000ac30783020303030493ca3f000000ca3f000000c212c282130814c082130814c082130814c082130814c082130814c082130814c082130814c08213")

	'''
	str = ''
	for num in [62, 158, 184, 82]:
		str += '{:02x}'.format(int(num))
	print(ieee754_to_rendered_str(str))
	'''


	print(ieee754_to_rendered_str('3EC28F5C'))
	print(ieee754_to_rendered_str('3f333334'))

	print(ieee754_to_rendered_str('3f147ae0'))
	print(ieee754_to_rendered_str('3f333334'))
	print(ieee754_to_rendered_str('3f147ae0'))
	print(ieee754_to_rendered_str('3e800000'))
	print(ieee754_to_rendered_str('3f4ccccc'))


if __name__ == '__main__':
	main(sys.argv)
